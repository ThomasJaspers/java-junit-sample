<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.codecentric.sample</groupId>
	<artifactId>junitsample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>junitsample</name>
	<description>JUnit Sample</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.2.RELEASE</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<configuration>
					<excludes>
						<!-- Any exclusions you require, *.class -->
					</excludes>
				</configuration>
				<executions>
					<!-- Ask JaCoCo to generate a test report from surefire tests -->
					<execution>
						<id>prepare-code-coverage</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ask JaCoCo to format test report into browsable HTML -->
					<!-- Multi-module builds should include report-aggregate and use the -->
					<!-- default outputDirectory. -->
					<!-- Single-module builds should exclude report-aggregate and use -->
					<!-- the given outputDirectory. -->
					<execution>
						<id>report-code-coverage</id>
						<goals>
							<goal>report</goal>
							<!-- <goal>report-aggregate</goal> -->
						</goals>
						<configuration>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
					<!-- Make sure we have at least 70% coverage -->
					<execution>
						<id>verify-test-coverage</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<excludes>
										<exclude>*Mojo</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>70%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.sigpwned</groupId>
				<artifactId>jacoco-badge-maven-plugin</artifactId>
				<version>0.1.3</version>
				<executions>
					<execution>
						<id>generate-jacoco-badge</id>
						<phase>verify</phase>
						<goals>
							<goal>badge</goal>
							<!-- Generate a badge from a unified JaCoCo report -->
						</goals>
						<configuration>
							<!-- What coverage level is considered passing? Optional, default 70. -->
							<passing>70</passing>
							<!-- Legal values: instruction, branch, line, method. Optional, default instruction. -->
							<metric>instruction</metric>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
